1. DNS

DNS (система доменных имен) преобразует доменные имена (написанные буквами/словами), 
удобные для человеческого восприятия, 
в IP-адреса, понимаемые машиной (например, 192.0.2.44).
Человеку легче запоминать слова и ассоциировать их с чем то
Для компьютера проще и быстрее оперировать цифрами

2. HTTP и HTTPS

HTTP — это протокол передачи гипертекстовой разметки, 
которая используется для передачи данных в интернете
HTTPS - это не совсем протокол. 
Это расширение HTTP-протокола — объединение двух протоколов: HTTP и SSL или HTTP и TLS.

Протокол SSL (Secure Socket Layer) — криптографические.
TLS (Transport Layer Security) - основанный на протоколе SSL, пришел ему на смену, в виду устаревания.

HTTPS - является защищенным протоколом, данные  кодируются перед передачей, могут расшифроваться только у получателя.
HTTPS немного медленнее, относительно HTTP. Но не существенно 

3. Разница версий

Версия 1.1 (опуская версии 0.9, 1.0)
Позволяет клиенту отправлять несколько запросов по одному и тому же соединению, 
не дожидаясь ответа на каждый запрос, что значительно повышает производительность

Конвейерная обработка - при отправке в один и тот же пункт назначения 
несколько пакетов данных не могут проходить друг через друга, возникают ситуации, 
когда запрос в начале очереди, который не может извлечь требуемый ресурс, блокирует все запросы, 
находящиеся за ним. Это называется блокировкой очереди (head-of-line blocking, или HOL) 
и представляет собой серьезную проблему оптимизации эффективности соединения в HTTP/1.1. 
Добавление отдельных параллельных TCP-соединений может решить эту проблему, 
но в протоколе существуют ограничения на количество одновременных TCP-соединений между клиентом и сервером, 
и каждое новое соединение требует значительных ресурсов.

Версия 2.0
В HTTP 2.0 двоичный уровень кадрирования кодирует запросы и ответы и разбивает их на более мелкие пакеты информации, 
что значительно повышает гибкость передачи данных.
Приоритизация потоков не только предотвращает потенциальную проблему с запросами, 
конкурирующими за один и тот же ресурс, но также позволяет разработчикам настраивать относительный вес запросов 
для лучшей оптимизации производительности приложений.

Некоторые функции HTTP/2  обеспечивают более высокий уровень контроля, 
который можно использовать для оптимизации производительности веб-приложений, 
а другие функции просто улучшают предыдущий протокол.


